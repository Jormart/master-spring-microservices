*********************************
Commands Executed in This Section
*********************************

gcloud config set project my-kubernetes-project-304910
gcloud container clusters get-credentials my-cluster --zone us-central1-c --project my-kubernetes-project-304910
 
kubectl create deployment hello-world-rest-api --image=in28min/hello-world-rest-api:0.0.1.RELEASE
kubectl get deployment
 
kubectl expose deployment hello-world-rest-api --type=LoadBalancer --port=8080
kubectl get services
kubectl get services --watch
 
curl 35.184.204.214:8080/hello-world

✅ Caveat!!
gcloud container clusters resize my-cluster --node-pool default-pool --num-nodes=2 --zone=us-central1-c
(This only works in Standard clusters. Autopilot clusters node management is automatic.)

******************************************************************************
✅ Scale your application
Don't scale nodes — instead, scale your pods or workloads.

Use:
kubectl scale deployment hello-world-rest-api --replicas=3

kubectl get pods

watch curl http://34.27.102.227:8080/hello-world


✅ Trigger Auto-scaling (if not already used)
If you haven’t enabled Horizontal Pod Autoscaler (HPA):

kubectl autoscale deployment hello-world-rest-api --max=4 --cpu-percent=70
kubectl get hpa

This tells Kubernetes to scale your pods based on CPU usage — and Autopilot will adjust infrastructure as needed.

******************************************************************************

kubectl create configmap hello-world-config --from-literal=RDS_DB_NAME=todos
kubectl get configmap
kubectl describe configmap hello-world-config
 
kubectl create secret generic hello-world-secrets-1 --from-literal=RDS_PASSWORD=dummytodos
kubectl get secret
kubectl describe secret hello-world-secrets-1
 
kubectl apply -f deployment.yaml
 
gcloud container node-pools list --zone=us-central1-c --cluster=my-cluster
(This only works in Standard clusters. Autopilot clusters node management is automatic.)

******************************************************************************
✅ View details about the cluster resources, you can use:

gcloud container clusters describe my-cluster --region=us-central1

✅ See what nodes are running (via Kubernetes API), use:

kubectl get nodes

******************************************************************************
kubectl get pods -o wide

kubectl set image deployment hello-world-rest-api hello-world-rest-api=in28min/hello-world-rest-api:0.0.2.RELEASE
 
kubectl get services
kubectl get replicasets
kubectl get pods
 
kubectl delete pod hello-world-rest-api-58dc9d7fcc-8pv7r
 
kubectl scale deployment hello-world-rest-api --replicas=1
 
kubectl get replicasets
 
gcloud projects list
kubectl delete service hello-world-rest-api
kubectl delete deployment hello-world-rest-api
 
gcloud container clusters delete my-cluster --zone us-central1-c
gcloud container clusters delete my-cluster --region us-central1